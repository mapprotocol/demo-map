{"remainingRequest":"/Users/admin/map/demo-map/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/admin/map/demo-map/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/map/demo-map/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/map/demo-map/src/components/home.vue?vue&type=template&id=957c9522&scoped=true&","dependencies":[{"path":"/Users/admin/map/demo-map/src/components/home.vue","mtime":1603160405000},{"path":"/Users/admin/map/demo-map/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/map/demo-map/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/admin/map/demo-map/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/map/demo-map/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}